
package eweather;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

public class MenuGUI extends javax.swing.JFrame {

    public MenuGUI() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jDialogKairos = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        listKairos = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKairos = new javax.swing.JTable();
        btnTwra = new javax.swing.JButton();
        btnAnaneosiKairos = new javax.swing.JButton();
        btnEpistrofiKairos = new javax.swing.JButton();
        jDialogProvlepsi = new javax.swing.JDialog();
        cbxProvlepsi = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProvlepsi = new javax.swing.JTable();
        btnPrwti = new javax.swing.JButton();
        btnPente = new javax.swing.JButton();
        btnAnaneosiPorvlepsi = new javax.swing.JButton();
        btnEpistrofiProvlepsi = new javax.swing.JButton();
        jDialogStatistika = new javax.swing.JDialog();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnMinMax = new javax.swing.JButton();
        btnAnaPoli = new javax.swing.JButton();
        btnEpistrofi = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblStatistika = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMin = new javax.swing.JTextField();
        txtMax = new javax.swing.JTextField();
        eWeatherPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("eWeatherPU").createEntityManager();
        cityInfoQuery = java.beans.Beans.isDesignTime() ? null : eWeatherPUEntityManager.createQuery("SELECT c FROM CityInfo c");
        cityInfoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(cityInfoQuery.getResultList());
        cityInfoQuery1 = java.beans.Beans.isDesignTime() ? null : eWeatherPUEntityManager.createQuery("SELECT c.cityName FROM CityInfo c");
        cityInfoList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : cityInfoQuery1.getResultList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel = new javax.swing.JPanel();
        btnProvlepsiKairou = new javax.swing.JButton();
        javax.swing.JButton btnKairosTwra = new javax.swing.JButton();
        btnEksodos = new javax.swing.JButton();
        btnStatistika = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jDialogKairos.setTitle("Ο καιρός τώρα");
        jDialogKairos.setLocation(new java.awt.Point(200, 200));
        jDialogKairos.setModal(true);

        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cityInfoList, listKairos);
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${cityName}"));
        bindingGroup.addBinding(jListBinding);

        jScrollPane1.setViewportView(listKairos);

        tblKairos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Main Temp", "Description", "Clouds", "Speed", "Timestamp", "Rain", "Snow"
            }
        ));
        jScrollPane2.setViewportView(tblKairos);

        btnTwra.setText("Καιρός Τώρα");
        btnTwra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTwraActionPerformed(evt);
            }
        });

        btnAnaneosiKairos.setText("Ανανέωση Καιρού");
        btnAnaneosiKairos.setToolTipText("");
        btnAnaneosiKairos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnaneosiKairosActionPerformed(evt);
            }
        });

        btnEpistrofiKairos.setText("Επιστροφή");
        btnEpistrofiKairos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEpistrofiKairosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogKairosLayout = new javax.swing.GroupLayout(jDialogKairos.getContentPane());
        jDialogKairos.getContentPane().setLayout(jDialogKairosLayout);
        jDialogKairosLayout.setHorizontalGroup(
            jDialogKairosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogKairosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogKairosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnAnaneosiKairos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEpistrofiKairos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTwra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDialogKairosLayout.setVerticalGroup(
            jDialogKairosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogKairosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jDialogKairosLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(btnTwra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAnaneosiKairos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEpistrofiKairos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jDialogProvlepsi.setTitle("Πρόβλεψη Καιρού");
        jDialogProvlepsi.setLocation(new java.awt.Point(200, 200));
        jDialogProvlepsi.setModal(true);

        cbxProvlepsi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${resultList}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cityInfoQuery1, eLProperty, cbxProvlepsi);
        bindingGroup.addBinding(jComboBoxBinding);

        tblProvlepsi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Main Temp", "Description", "Couds", "Speed", "Timestamp", "Rain", "Snow"
            }
        ));
        jScrollPane3.setViewportView(tblProvlepsi);

        btnPrwti.setText("Προόβλεψη Καιρού 1ης Ημέρας");
        btnPrwti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrwtiActionPerformed(evt);
            }
        });

        btnPente.setText("Πρόβλεψη Καιρού 5 Ημερών");
        btnPente.setToolTipText("");
        btnPente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPenteActionPerformed(evt);
            }
        });

        btnAnaneosiPorvlepsi.setText("Ανανέωση Πρόβλεψης Καιρού");
        btnAnaneosiPorvlepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnaneosiPorvlepsiActionPerformed(evt);
            }
        });

        btnEpistrofiProvlepsi.setText("Επιστροφή");
        btnEpistrofiProvlepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEpistrofiProvlepsiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogProvlepsiLayout = new javax.swing.GroupLayout(jDialogProvlepsi.getContentPane());
        jDialogProvlepsi.getContentPane().setLayout(jDialogProvlepsiLayout);
        jDialogProvlepsiLayout.setHorizontalGroup(
            jDialogProvlepsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogProvlepsiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogProvlepsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxProvlepsi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEpistrofiProvlepsi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrwti, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAnaneosiPorvlepsi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDialogProvlepsiLayout.setVerticalGroup(
            jDialogProvlepsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogProvlepsiLayout.createSequentialGroup()
                .addGroup(jDialogProvlepsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDialogProvlepsiLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(cbxProvlepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112)
                        .addComponent(btnPrwti, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAnaneosiPorvlepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(btnEpistrofiProvlepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(jDialogProvlepsiLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jDialogStatistika.setTitle("Στατιστικά");
        jDialogStatistika.setLocation(new java.awt.Point(200, 200));
        jDialogStatistika.setModal(true);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${resultList}");
        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cityInfoQuery1, eLProperty, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);

        btnMinMax.setText("Θερμοκρασία min/max");
        btnMinMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinMaxActionPerformed(evt);
            }
        });

        btnAnaPoli.setText("Θερμοκρασία ανά πόλη");
        btnAnaPoli.setToolTipText("");
        btnAnaPoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnaPoliActionPerformed(evt);
            }
        });

        btnEpistrofi.setText("Επιστροφή");
        btnEpistrofi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEpistrofiActionPerformed(evt);
            }
        });

        tblStatistika.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "City", "Max", "Min", "Avg"
            }
        ));
        jScrollPane5.setViewportView(tblStatistika);

        jLabel5.setText("Θερμοκρασία ανά πόλη");

        jLabel6.setText("Ελάχιστη Θερμοκρασία");

        jLabel7.setText("Μέγιστη Θερμοκρασία");

        txtMin.setEditable(false);

        txtMax.setEditable(false);

        javax.swing.GroupLayout jDialogStatistikaLayout = new javax.swing.GroupLayout(jDialogStatistika.getContentPane());
        jDialogStatistika.getContentPane().setLayout(jDialogStatistikaLayout);
        jDialogStatistikaLayout.setHorizontalGroup(
            jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogStatistikaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMinMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAnaPoli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEpistrofi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogStatistikaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jDialogStatistikaLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMin, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(txtMax))
                        .addContainerGap(41, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogStatistikaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(112, 112, 112))
        );
        jDialogStatistikaLayout.setVerticalGroup(
            jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogStatistikaLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(txtMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jDialogStatistikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogStatistikaLayout.createSequentialGroup()
                        .addComponent(btnMinMax, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAnaPoli, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEpistrofi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogStatistikaLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("eWeather");
        setLocation(new java.awt.Point(300, 100));
        setName("frame"); // NOI18N

        jPanel.setBackground(new java.awt.Color(255, 255, 203));

        btnProvlepsiKairou.setText("Πρόβλεψη Καιρού");
        btnProvlepsiKairou.setToolTipText("");
        btnProvlepsiKairou.setMaximumSize(new java.awt.Dimension(200, 100));
        btnProvlepsiKairou.setMinimumSize(new java.awt.Dimension(200, 100));
        btnProvlepsiKairou.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProvlepsiKairouActionPerformed(evt);
            }
        });

        btnKairosTwra.setText("Ο Καιρός Τώρα");
        btnKairosTwra.setMaximumSize(new java.awt.Dimension(200, 100));
        btnKairosTwra.setMinimumSize(new java.awt.Dimension(200, 100));
        btnKairosTwra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKairosTwraActionPerformed(evt);
            }
        });

        btnEksodos.setText("Έξοδος");
        btnEksodos.setToolTipText("");
        btnEksodos.setMaximumSize(new java.awt.Dimension(81, 25));
        btnEksodos.setMinimumSize(new java.awt.Dimension(81, 25));
        btnEksodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEksodosActionPerformed(evt);
            }
        });

        btnStatistika.setText("Στατιστικά");
        btnStatistika.setToolTipText("");
        btnStatistika.setMaximumSize(new java.awt.Dimension(200, 100));
        btnStatistika.setMinimumSize(new java.awt.Dimension(200, 100));
        btnStatistika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatistikaActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eweather/images/close.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eweather/images/graph.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eweather/images/weatherForecast.png"))); // NOI18N
        jLabel3.setText("jLabel3");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eweather/images/warm.png"))); // NOI18N
        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnKairosTwra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProvlepsiKairou, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnStatistika, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEksodos, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKairosTwra, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProvlepsiKairou, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStatistika, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(20, 20, 20)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEksodos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(105, 105, 105))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProvlepsiKairouActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProvlepsiKairouActionPerformed
       
       jDialogProvlepsi.pack();
       jDialogProvlepsi.setVisible(true);
    }//GEN-LAST:event_btnProvlepsiKairouActionPerformed

    private void btnKairosTwraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKairosTwraActionPerformed
       
       jDialogKairos.pack();
       jDialogKairos.setVisible(true);
    }//GEN-LAST:event_btnKairosTwraActionPerformed

    private void btnEksodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEksodosActionPerformed
        
        jDialogKairos.dispose();
        jDialogProvlepsi.dispose();
        jDialogStatistika.dispose();
        this.dispose();
    }//GEN-LAST:event_btnEksodosActionPerformed

    private void btnStatistikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatistikaActionPerformed
       
       jDialogStatistika.pack();
       jDialogStatistika.setVisible(true);
    }//GEN-LAST:event_btnStatistikaActionPerformed

    private void btnEpistrofiKairosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEpistrofiKairosActionPerformed
       
        jDialogKairos.setVisible(false);
    }//GEN-LAST:event_btnEpistrofiKairosActionPerformed

    private void btnAnaneosiPorvlepsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnaneosiPorvlepsiActionPerformed
           
           prwtiActionPerformed();
           ApiCall.getForecast();
    }//GEN-LAST:event_btnAnaneosiPorvlepsiActionPerformed

    private void btnEpistrofiProvlepsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEpistrofiProvlepsiActionPerformed
        
        jDialogProvlepsi.setVisible(false);
    }//GEN-LAST:event_btnEpistrofiProvlepsiActionPerformed

    private void btnEpistrofiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEpistrofiActionPerformed
       
        jDialogStatistika.setVisible(false);
    }//GEN-LAST:event_btnEpistrofiActionPerformed

    private void btnAnaneosiKairosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnaneosiKairosActionPerformed
        
        ApiCall.getCurrent();
        twraActionPerformed();
    }//GEN-LAST:event_btnAnaneosiKairosActionPerformed

    private void btnTwraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTwraActionPerformed

       twraActionPerformed();
    }//GEN-LAST:event_btnTwraActionPerformed

    //μέθοδος που καλείται απο το κουμπί Καιρός Τώρα
    private void twraActionPerformed() {                                        

       if(listKairos.getSelectedIndex() == -1 )
       {   
           JOptionPane.showMessageDialog(null, "Πρέπει να επιλέξετε κάποια πόλη", "Info" , JOptionPane.INFORMATION_MESSAGE);
           return;
       }
       
       //βρίσκουμε την πόλη βάση το όνομα που έχει επιλέξει ο χρήστης
       CityInfo ci  = eWeatherPUEntityManager.createNamedQuery("CityInfo.findByCityName",CityInfo.class)
                                             .setParameter("cityName",listKairos.getSelectedValue())
                                             .getSingleResult();
    
       DefaultTableModel model = (DefaultTableModel) tblKairos.getModel();
       model.getDataVector().removeAllElements();
       model.fireTableDataChanged();
       Object rawdata[] = new Object[7];
       
       int max = 0;
       int id = 0;
       
       //βρίσκουμε την πιο πρόσφατη εγγραφή στον WEATHER_INFO
       //που αντιστοιχεί στην πόλη και προέρχεται από κλήση της currentWeather
       //και αποθηκεύουμε το id της
       for (WeatherInfo a : ci.getWeatherInfoCollection() )
       {
           if(a.getWeatherInfoIscurrent())
               if(Integer.parseInt(a.getWeatherInfoDt())> max)
               {
                   max = Integer.parseInt(a.getWeatherInfoDt());
                   id = a.getWeatherInfoId();
               }
       }
       //εντοπίζουμε την εγγραφή βάση του id
       WeatherInfo wi = eWeatherPUEntityManager.createNamedQuery("WeatherInfo.findByWeatherInfoId",WeatherInfo.class)
                                               .setParameter("weatherInfoId",id)
                                               .getSingleResult();
       //περνάμε τα στοιχεία στο jTable
           rawdata[0] = wi.getWeatherInfoMaintemp();
           rawdata[1] = wi.getWeatherInfoDescription();
           rawdata[2] = wi.getWeatherInfoClouds();
           rawdata[3] = wi.getWeatherInfoSpeed();
           rawdata[4] = wi.getWeatherInfoDt();
           rawdata[5] = wi.getWeatherInfoRain();
           rawdata[6] = wi.getWeatherInfoSnow();
           model.addRow(rawdata);
    }          
    
    private void btnMinMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinMaxActionPerformed
        
        txtMin.setText("");
        txtMax.setText("");
        
        //βρίσκουμε την πόλη βάση το όνομα που έχει επιλέξει ο χρήστης
        CityInfo ci  = eWeatherPUEntityManager.createNamedQuery("CityInfo.findByCityName",CityInfo.class)
                                              .setParameter("cityName",jComboBox1.getSelectedItem()
                                              .toString()).getSingleResult();
        
        float min = 1000;
        float max = 0;
        
        //βρίσκουμε την μέγιστη και την ελάχιστη τιμή της θερμοκρασίας
        //για τις εγγραφές του WEATHER_INFO που αντιστοιχούν στην πόλη
        for(WeatherInfo wi : ci.getWeatherInfoCollection()){
           max = Float.max(Float.parseFloat(wi.getWeatherInfoMaintemp()), max);
           min = Float.min(Float.parseFloat(wi.getWeatherInfoMaintemp()), min);
        }
       
        txtMin.setText(Float.toString(min));
        txtMax.setText(Float.toString(max));
    }//GEN-LAST:event_btnMinMaxActionPerformed

    private void btnAnaPoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnaPoliActionPerformed
       
       //εισάγουμε όλες τις πόλεις σε μια λίστα 
       List<CityInfo> ciList = eWeatherPUEntityManager.createNamedQuery("CityInfo.findAll",CityInfo.class).getResultList();
        
       DefaultTableModel model = (DefaultTableModel) tblStatistika.getModel();
       model.getDataVector().removeAllElements();
       model.fireTableDataChanged();
       Object rawdata[] = new Object[4];
       
        for (CityInfo ci : ciList)
        {
            float max = 0;
            float min = 1000;
            float sum = 0;
            rawdata[0] = ci.getCityName();
            
            //για κάθε πόλη βρίσκουμε την μέγιστη,ελάχιστη και το άθροισμα όλων
            //των θερμοκρασίων
            for (WeatherInfo wi : ci.getWeatherInfoCollection())
            {
                max = Float.max(Float.parseFloat(wi.getWeatherInfoMaintemp()), max);
                min = Float.min(Float.parseFloat(wi.getWeatherInfoMaintemp()), min);
                sum += Float.parseFloat(wi.getWeatherInfoMaintemp());
            }
            //τα περνάμε στο jTable
            rawdata[1] = max;
            rawdata[2] = min;
            rawdata[3] = sum / ci.getWeatherInfoCollection().size();
            model.addRow(rawdata);
        }
    }//GEN-LAST:event_btnAnaPoliActionPerformed

    private void btnPrwtiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrwtiActionPerformed
        
          prwtiActionPerformed();
    }//GEN-LAST:event_btnPrwtiActionPerformed
  
    //μέθοδος που καλείται από το κουμπί Πρόβλεψη καιρού 1ης ημέρας
    private void prwtiActionPerformed() {                                         
    
    //βρίσκουμε την πόλη βάση το όνομα που έχει επιλέξει ο χρήστης    
    CityInfo ci  = eWeatherPUEntityManager.createNamedQuery("CityInfo.findByCityName",CityInfo.class)
                                          .setParameter("cityName",cbxProvlepsi.getSelectedItem().toString())
                                          .getSingleResult();
    
    long dif = 999999999;
    int id =0;
    
    //βρίσκουμε την πιο κοντινή σε ώρα πρόβλεψη με την current ώρα
    //και κρατάμε το id της
     for(WeatherInfo wi :  ci.getWeatherInfoCollection())
            if (Math.abs(Long.parseLong(wi.getWeatherInfoDt())*1000 - System.currentTimeMillis())< dif && !wi.getWeatherInfoIscurrent())
            {
                dif = Math.abs(Long.parseLong(wi.getWeatherInfoDt()) - System.currentTimeMillis());
                id = wi.getWeatherInfoId();
            }
    
       DefaultTableModel model = (DefaultTableModel) tblProvlepsi.getModel();
       model.getDataVector().removeAllElements();
       model.fireTableDataChanged();
       Object rawdata[] = new Object[7];
     
      //θα εμφανίσουμε στον πίνακα την εγγραφή με το προηγούμενο id
      //και τις επόμενες 7 εγγραφές βάση id
     for(int i=0;i<8;i++)
     {
        WeatherInfo wi = eWeatherPUEntityManager.createNamedQuery("WeatherInfo.findByWeatherInfoId",WeatherInfo.class)
                                                .setParameter("weatherInfoId",id)
                                                .getSingleResult();
        id++;
        rawdata[0] = wi.getWeatherInfoMaintemp();
        rawdata[1] = wi.getWeatherInfoDescription();
        rawdata[2] = wi.getWeatherInfoClouds();
        rawdata[3] = wi.getWeatherInfoSpeed();
        rawdata[4] = wi.getWeatherInfoDt();
        rawdata[5] = wi.getWeatherInfoRain();
        rawdata[6] = wi.getWeatherInfoSnow();
        model.addRow(rawdata);
     }
    
    }        
    private void btnPenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPenteActionPerformed
          
        //βρίσκουμε την πόλη βάση το όνομα που έχει επιλέξει ο χρήστης
        CityInfo ci  = eWeatherPUEntityManager.createNamedQuery("CityInfo.findByCityName",CityInfo.class)
                                  .setParameter("cityName",cbxProvlepsi.getSelectedItem()
                                  .toString()).getSingleResult();
        
        long max = 0;
        
        //βρίσκουμε την πιο πρόσφατη πρόβλεψη βάση της ώρας που εισάγαμε
        //την εγγραφή στην βάση
        for(WeatherInfo wi :  ci.getWeatherInfoCollection())
            if (Long.parseLong(wi.getWeatherInfoTimestamp()) > max && !wi.getWeatherInfoIscurrent())
                max = Long.parseLong(wi.getWeatherInfoTimestamp());
        
        //βρίσκουμε όλες τις εγγραφές που είναι προβλέψεις βάση του timestamp
        //φέρνει πάντα 40
        List<WeatherInfo> wiList = eWeatherPUEntityManager.createNamedQuery("WeatherInfo.findByWeatherInfoIscurrentAndTimestamp",WeatherInfo.class)
                                  .setParameter("weatherInfoTimestamp",Long.toString(max))
                                  .setParameter("weatherInfoIscurrent",Boolean.FALSE)
                                  .getResultList();

       DefaultTableModel model = (DefaultTableModel) tblProvlepsi.getModel();
       model.getDataVector().removeAllElements();
       model.fireTableDataChanged();
       Object rawdata[] = new Object[7];

       SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
       Date a = new Date();
  
        for(WeatherInfo wi : wiList)
        {
            //Timestamp a = new Timestamp();
           String date = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date (Long.parseLong(wi.getWeatherInfoDt())*1000));
            try {
               a = sdf.parse(date);
                } catch (ParseException ex) {ex.getMessage();}
            
            //κρατάμε μόνο τις προβλέψεις που αφορούν τις 12
            //και τις εισάγουμε στον πίνακα
           if(a.getHours() == 12)
            {
               rawdata[0] = wi.getWeatherInfoMaintemp();
               rawdata[1] = wi.getWeatherInfoDescription();
               rawdata[2] = wi.getWeatherInfoClouds();
               rawdata[3] = wi.getWeatherInfoSpeed();
               rawdata[4] = wi.getWeatherInfoDt();
               rawdata[5] = wi.getWeatherInfoRain();
               rawdata[6] = wi.getWeatherInfoSnow();
               model.addRow(rawdata);
            }

         }
    }//GEN-LAST:event_btnPenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run()  {
                new MenuGUI().setVisible(true);
                ApiCall.getForecast();
                ApiCall.getCurrent();
            }
        }
        );
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnaPoli;
    private javax.swing.JButton btnAnaneosiKairos;
    private javax.swing.JButton btnAnaneosiPorvlepsi;
    private javax.swing.JButton btnEksodos;
    private javax.swing.JButton btnEpistrofi;
    private javax.swing.JButton btnEpistrofiKairos;
    private javax.swing.JButton btnEpistrofiProvlepsi;
    private javax.swing.JButton btnMinMax;
    private javax.swing.JButton btnPente;
    private javax.swing.JButton btnProvlepsiKairou;
    private javax.swing.JButton btnPrwti;
    private javax.swing.JButton btnStatistika;
    private javax.swing.JButton btnTwra;
    private javax.swing.JComboBox<String> cbxProvlepsi;
    private java.util.List<eweather.CityInfo> cityInfoList;
    private java.util.List<eweather.CityInfo> cityInfoList1;
    private javax.persistence.Query cityInfoQuery;
    private javax.persistence.Query cityInfoQuery1;
    private javax.persistence.EntityManager eWeatherPUEntityManager;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDialog jDialogKairos;
    private javax.swing.JDialog jDialogProvlepsi;
    private javax.swing.JDialog jDialogStatistika;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> listKairos;
    private javax.swing.JTable tblKairos;
    private javax.swing.JTable tblProvlepsi;
    private javax.swing.JTable tblStatistika;
    private javax.swing.JTextField txtMax;
    private javax.swing.JTextField txtMin;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}